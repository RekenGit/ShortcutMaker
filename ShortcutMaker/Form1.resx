<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5cPRoC0h9IYAAAAASUVORK5CYII=
</value>
  </data>
</root>